#define PORT 8080
 #define BUFFER_SIZE 1024
 #include "wraping.c"
 void  str_echo(int sockfd) {
 ssize_t n;
 char    
buf[BUFFER_SIZE ];
 again: while ( (n = read(sockfd, buf, 
BUFFER_SIZE )) > 0)
 Writen(sockfd, buf, n);
 if (n < 0 && errno == EINTR)
 goto again;
 else if (n < 0)
 err_sys("str_echo: read error");
 }

 int main() {
 int server_fd, new_socket;
 struct sockaddr_in address;
 int opt = 1;
 int addrlen = sizeof(address);
 char buffer[BUFFER_SIZE] = {0};
 server_fd = Socket(AF_INET, SOCK_STREAM, 0)
 address.sin_family = AF_INET;
 address.sin_addr.s_addr = INADDR_ANY;
 address.sin_port = htons(PORT);
 Bind(server_fd, (struct sockaddr *)&address, sizeof(address))
 Listen(server_fd, 3)
 while (1)
 { new_socket = Accept(server_fd, (struct sockaddr *)&address, 
(socklen_t*)&addrlen))
 int read_size;
 str_echo(sockfd)
 close(new_socket);
 }Close(server_fd);
 }
 return 0;
